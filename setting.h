#pragma once

/**
 * @brief файл с настройками программы
 *
 */

// ==== Подключенная периферия =======================
#define LED_ON 2 // Количество светодиодов (0- светодиоды не используются, максимум 2 светодиода
#define KEY_ON 3 // Количество кнопок подключенных к библиотеке shButton (0- библиотека отключена, максимум 4 кнопки)

#define LOG_ON 0               // Включить отладочный вывод через Serial;  1 - включить лог, 0 - выключить
#define SERIAL_BAUDRATE 115200 // скорость работы Serial

// ==== Настройка FastLED ============================
#define MAX_LEDS 104 // Максимальное количество светодиодов,  очень влияет на память

#define CHIPSET WS2812B // Тип микросхемы светодиодов в гирлянде

#define POWER_V 5   // напряжение блока питания в Вольтах
#define POWER_I 500 // Ток блока питания в миллиАмперах

// ==== Пины для подключения периферии ===============

#define LED_DATA_PIN 6 // Номер пина куда подключена гирлянда
// #define LED_CLK_PIN 11 // Номер пина для подключения линии тактирования, применяется для светодиодов WS2801, APA102 и т.д.
// ЕСЛИ НЕ ИСПОЛЬЗУЕТСЯ ЗАКОМЕНТИРОВАТЬ

#define COLOR_ORDER_PIN 7 // Пин для переключателя очередности цвета светодиодов  RGB или GRB

#define LED1_PIN 26 // Номер пина, куда подключен 1 светодиод
#define LED2_PIN 25 // Номер пина, куда подключен 2 светодиод

#define BTN1_PIN 3 // Номер пина, куда подключена кнопка 1
#define BTN2_PIN 4 // Номер пина, куда подключена кнопка 2
#define BTN3_PIN 5 // Номер пина, куда подключена кнопка 3
#define BTN4_PIN 9 // Номер пина, куда подключена кнопка 4
// кнопки замыкаются на землю, используется внутренняя подтяжка МК

// ==== Настройка эффектов ===========================
#define BLACKSTART 1 // Первый запуск делать с черного экрана 0- начинать с эффекта, 1- начинать с черного экрана

#define GLITER_ON 1 // Включить блеск 0 - блеск отключен, 1- блеск включен

#define CANDLE_KOL 5 // если больше 0 то будут включена имитация свечей, число задает через какое расстояние друг от друга располагать свечи
#define CANDLE_ON 0  // Если включена имитация свечей то 1 = при запуске она будет включена, 0 = при запуске она будет выключена

#define CANDLE_40 1 // Управление 40 эффектом (свечи)   1 = при запуске она будет включена по варианту efimova1969, иначе при запуске она будет включена по моему варианту

#define BACKGR_ON 1 // Включить заполнение черного цвета фоном

#define DEMO_MODE 4 // Режим при включении
                    // 0 - последняя запущенная программа
                    // 1 - демо режим с последовательным перебором эффектов
                    // 2 - демо режим с случайным перебором эффектов
                    // 3 - демо режим с последовательным перебором выбранных эффектов
                    // 4 - демо режим с случайным перебором выбранных эффектов

#define MY_MODE 0, 1, 2, 4, 5, 9, 10, 11, 14, 16, 17, 18, 19, 21, 22, 28, 30, 32, 34, 36, 37, 38
// Выбранные эффекты пишутся номера через запятую,
//  можно писать и одинаковые что актуально в демо 3
//  Если закомментировать, то демо 3 и 4 отключаются

#define DEMO_TIME 40 // Время отображение эффекта в демо режиме в секундах

#define CHANGE_ON 1    // Включить плавную смену эффектов
#define CHANGE_SPARK 1 // Эффект смены 0 - без эффекта,
                       // 1 - искры (бенгальский огонь)
                       // 2 - яркий свет
                       // 3 - метеорит,
                       // 4 - случайный эффект (из 1-3)
#define CHANGE_TIME 5  // Время в секундах, за которое произойдет плавная смена эффектов

#define DIRECT_TIME 20   // Через сколько секунд менять направление если 0 - не меняем
#define PALETTE_TIME 40  // Через сколько секунд менять палитру если 0 - не меняем
#define PALETTE_SPEED 20 // скорость перехода с одной палитры в другую (1- 48)

#define DEV_NOISE16 100 // если Зависает на 22 и 37 режимах, то уменьшаем число

#define SAVE_EEPROM 0 // Сохранять настройки запуска в EEPROM
                      // 0 - ничего не  хранить
                      // 1 - хранить стартовый режим, длина гирлянды, скорости и расширенные настройки (очередность цвета,состояние блеска, фон свечей)
                      // 2 - хранить стартовый режим, длина гирлянды, скорости

#define TOP_POSITION 2      // Позиция вершины елки (используется только в эффекте огня)
                            // 0 - не определена 1 - Вершина в начале гирлянды 2 - Вершина в конце гирлянды
#define TOP_LENGTH 0        // Выделять вершину цветом 0 - не выделять, больше 0  сколько светодиодов выделять в вершине
#define TOP_COLOR CRGB::Red // Цвет выделения вершины
#define TOP_EFFECT 2        // 0 - Просто залить цветом, 1 - случайное переливание, 2- переливание сверху вниз 3- переливание снизу вверх
#define TOP_DELAY 150       // Задержка эффекта в милисекундах
#define TOP_FADING 5        // Затухание

// ==== эффект бегущий огонь из 80-90 годов ==========
#define RUNNING_FIRE 0 // 1 Включить эффекты бегущего огня, начинаются с 43 команды
                       // Программы бегущего огня
                       // описание параметров
                       // первое число - кол-во ячеек в программе (от 1 до 8) показывает сколько шагов в эффекте
                       // второе число - разрядность эффекта      (от 1 до 8) показывает сколько светодиодов используется в эффекте
                       // остальные числа это программа, количество этих чисел задается в первом числе, один байт один шаг

#define PROG_0 8, 8, 0b10000000, 0b01000000, 0b00100000, 0b00010000, 0b00001000, 0b00000100, 0b00000010, 0b00000001 // 8 шагов, 8 светодиодов, 1 шаг горит 8 светодиод, 2 шаг горит 7 светодиод, 3 шаг горит 6 светодиод, ... , 8 шаг горит 1 светодиод
#define PROG_1 7, 7, 0b01000000, 0b00100000, 0b00010000, 0b00001000, 0b00000100, 0b00000010, 0b00000001             // 7 шагов, 7 светодиодов, 1 шаг горит 7 светодиод, 2 шаг горит 6 светодиод, 3 шаг горит 5 светодиод, ... , 7 шаг горит 1 светодиод
#define PROG_2 6, 6, 0b00100000, 0b00010000, 0b00001000, 0b00000100, 0b00000010, 0b00000001
#define PROG_3 5, 5, 0b00010000, 0b00001000, 0b00000100, 0b00000010, 0b00000001
#define PROG_4 4, 4, 0b00001000, 0b00000100, 0b00000010, 0b00000001
#define PROG_5 3, 3, 0b00000100, 0b00000010, 0b00000001                                                             // 3 шага, 3 светодиода, 1 шаг горит 3 светодиод, 2 шаг горит 2 светодиод, 3 шаг горит 1 светодиод
#define PROG_6 8, 8, 0b11100000, 0b01110000, 0b00111000, 0b00011100, 0b00001110, 0b00000111, 0b10000011, 0b11000001 // 8 шагов, 8 светодиодов, 1 шаг горят 8,7,6 светодиоды, 2 шаг горят 7,6,5 светодиоды, 3 шаг горят 6,5,4 светодиоды, ... , 8 шаг горят 1,8,7 светодиоды
#define PROG_7 8, 8, 0b11100100, 0b01110010, 0b00111001, 0b10011100, 0b01001110, 0b00100111, 0b10010011, 0b11001001 // 8 шагов, 8 светодиодов, 1 шаг горят 8,7,6,3 светодиоды, 2 шаг горят 7,6,5,2 светодиоды, 3 шаг горят 6,5,4,1 светодиоды, ... , 8 шаг горят 1,8,7,4 светодиоды
#define PROG_8 8, 8, 0b11110110, 0b01111011, 0b10111101, 0b11011110, 0b01101111, 0b10110111, 0b11011011, 0b11101101 // 8 шагов, 8 светодиодов, 1 шаг горят все светодиоды кроме 4 и 1, 2 шаг горят все светодиоды кроме 3 и 8, 3 шаг горят все светодиоды кроме 2 и 7, ... , 8 шаг горят все светодиоды кроме 5 и 2
#define PROG_9 6, 6, 0b00111000, 0b00011100, 0b00001110, 0b00000111, 0b00100011, 0b00110001

#define PROG_RUN_FIRE PROG_0, PROG_1, PROG_2, PROG_3, PROG_4, PROG_5, PROG_6, PROG_7, PROG_8, PROG_9 // Все программы эффектов бегущего огня через запятую

// ==== Параметры кнопок =============================

#if KEY_ON > 0
#include <shButton.h> // https://github.com/VAleSh-Soft/shButton
shButton btn1(BTN1_PIN);
#if KEY_ON > 1
shButton btn2(BTN2_PIN);
#endif
#if KEY_ON > 2
shButton btn3(BTN3_PIN);
#endif
#if KEY_ON > 3
shButton btn4(BTN4_PIN);
#endif
#endif

// Команды связанные с действиями кнопки, менять не надо, просто используем
#define BTN1_1 1000       // кнопка 1 клик
#define BTN1_2 1001       // кнопка 1 два клика
#define BTN1_3 1002       // кнопка 1 три клика
#define BTN1_4 1003       // кнопка 1 четыре клика
#define BTN1_PRESS 1005   // кнопка 1 удержание
#define BTN1_1_PRESS 1006 // кнопка 1 один клик + удержание
#define BTN1_2_PRESS 1007 // кнопка 1 два клика + удержание
#define BTN1_3_PRESS 1008 // кнопка 1 три клика + удержание
#define BTN2_1 1100       // кнопка 2 клик
#define BTN2_2 1101       // кнопка 2 два клика
#define BTN2_3 1102       // кнопка 2 три клика
#define BTN2_4 1103       // кнопка 2 четыре клика
#define BTN2_PRESS 1105   // кнопка 2 удержание
#define BTN2_1_PRESS 1106 // кнопка 2 один клик + удержание
#define BTN2_2_PRESS 1107 // кнопка 2 два клика + удержание
#define BTN2_3_PRESS 1108 // кнопка 2 три клика + удержание
#define BTN3_1 1200       // кнопка 3 клик
#define BTN3_2 1201       // кнопка 3 два клика
#define BTN3_3 1202       // кнопка 3 три клика
#define BTN3_4 1203       // кнопка 3 четыре клика
#define BTN3_PRESS 1205   // кнопка 3 удержание
#define BTN3_1_PRESS 1206 // кнопка 3 один клик + удержание
#define BTN3_2_PRESS 1207 // кнопка 3 два клика + удержание
#define BTN3_3_PRESS 1208 // кнопка 3 три клика + удержание
#define BTN4_1 1300       // кнопка 4 клик
#define BTN4_2 1301       // кнопка 4 два клика
#define BTN4_3 1302       // кнопка 4 три клика
#define BTN4_4 1303       // кнопка 4 четыре клика
#define BTN4_PRESS 1305   // кнопка 4 удержание
#define BTN4_1_PRESS 1306 // кнопка 4 один клик + удержание
#define BTN4_2_PRESS 1307 // кнопка 4 два клика + удержание
#define BTN4_3_PRESS 1308 // кнопка 4 три клика + удержание

// ==== Все команды которые обрабатывает скетч =======

/*
 * формат такой:
 * #define Command_XXXX   YYYYY
 *   где Command_XXXX - код команды, это лучше не менять
 *       YYYYY        - код обработчика (это либо число получаемое при нажатии
 *                      кнопки пульта, либо значение соответствующее нажатой
 *                      кнопке аналоговой клавиатуры, это мы определили выше
 *                      как значения KEY_0, KEY_1, KEY_2 и подобные либо
 *                      значение соответствующее нажатой кнопке библиотеки
 *                      shButton, это мы определили выше как значения BTN_1,
 *                      BTN_2, BTN_3, BTN_4 и BTN_PRESS, либо Значение 0 если
 *                      команда не используется)
 *                      Если команда не используется то тогда надо YYYYY
 *                      заменить на 0 или закомментировать строку
 *
 * Пример:
 *   #define Command_Brightness_plus   BTN1_1 - установить обработку команды
 *                                             "Увеличить максимальную яркость"
 *                                             на нажатие кнопки BTN1
 *   #define Command_Brightness_minus  BTN1_2 - установить обработку команды
 *                                             "Уменьшить максимальную яркость"
 *                                             на двойное нажатие кнопки BTN1
 */

// ==== набор команд на кнопках ======================

// ---- для одной кнопки (BTN1) ----------------------
#if KEY_ON == 1

#define Command_Next_mode_Demo BTN1_1        // Следующий эффект. Оставляет демонстрационный режим
#define Command_Glitter BTN1_2               // Включить/выключить сверкание
#define Command_Brightness_plus_R BTN1_PRESS // Увеличить максимальную яркость, при достижения максимума начать с минимума
#endif

// ---- для двух кнопок (BTN1, BTN2) -----------------
#if KEY_ON == 2

#define Command_Previous_mode_Demo BTN1_1   // Предыдущий эффект. Оставляет демонстрационный режим
#define Command_Glitter BTN1_2              // Включить/выключить сверкание
#define Command_Brightness_minus BTN1_PRESS // Уменьшить максимальную яркость и остановится если достигли минимума

#define Command_Next_mode_Demo BTN2_1      // Следующий эффект. Оставляет демонстрационный режим
#define Command_Candle BTN2_2              // Включить/выключить свечки
#define Command_Brightness_plus BTN2_PRESS // Увеличить максимальную яркость и остановится если достигли максимума
#endif

// ---- для трех кнопок (BTN1, BTN2, BTN3) -----------
#if KEY_ON == 3

#define Command_Previous_mode_Demo BTN1_1   // Предыдущий эффект. Оставляет демонстрационный режим
#define Command_Brightness_minus BTN1_PRESS // Уменьшить максимальную яркость и остановится если достигли минимума

#define Command_Glitter BTN2_1 // Включить/выключить сверкание
#define Command_Candle BTN2_2  // Включить/выключить свечки

#define Command_Next_mode_Demo BTN3_1      // Следующий эффект. Оставляет демонстрационный режим
#define Command_Brightness_plus BTN3_PRESS // Увеличить максимальную яркость и остановится если достигли максимума
#endif

// ---- для четырех кнопок (BTN1, BTN2, BTN3,  BTN4) -
#if KEY_ON == 4

#endif

// ==== Команды связанные со светодиодами ============
#define LED1_On digitalWrite(LED1_PIN, HIGH);       // Включить светодиод 1
#define LED1_Off digitalWrite(LED1_PIN, LOW);       // Выключить светодиод 1
#define LED1_FleshH(x) Led1_flesh = 4 * x;          // Мигнуть быстро x раз 1 светодиодом    (1-15)
#define LED1_Flesh(x) Led1_flesh = 64 + (8 * x);    // Мигнуть x раз 1 светодиодом           (1-7)
#define LED1_FleshL(x) Led1_flesh = 128 + (16 * x); // Мигнуть медленно x раз 1 светодиодом  (1-7)
#define LED2_On digitalWrite(LED2_PIN, HIGH);       // Включить светодиод 2
#define LED2_Off digitalWrite(LED2_PIN, LOW);       // Выключить светодиод 2
#define LED2_FleshH(x) Led2_flesh = 4 * x;          // Мигнуть быстро x раз 2 светодиодом    (1-15)
#define LED2_Flesh(x) Led2_flesh = 64 + 8 * x;      // Мигнуть x раз 2 светодиодом           (1-7)
#define LED2_FleshL(x) Led2_flesh = 128 + 16 * x;   // Мигнуть медленно x раз 2 светодиодом  (1-7)

// ==== Переменные ===================================

// Установить флаг OFF
#define SetOff(x)  \
  {                \
    if (x < 100)   \
      x = x + 100; \
  }
// Установить флаг ON
#define SetOn(x)   \
  {                \
    if (x >= 100)  \
      x = x - 100; \
  }

// Проверка флага OFF
#define TestOff(x) (x >= 100)
// Вернуть значение без флага
#define GetOff(x) ((x < 100) ? x : x - 100)
// Цифровой макрос беззнакового вычитания; если результат меньше 0, то присвоить 0; в противном случае присваивается фиксированное значение
#define qsubd(x, b) ((x > b) ? wavebright : 0)
// Беззнаковый макрос вычитания. если результат меньше 0, то присвоить 0
#define qsuba(x, b) ((x > b) ? x - b : 0)

// ==== Функции ======================================

#if LED_ON > 0
// мигание светодиодом
void ledsFlash(uint8_t led_idx, uint8_t &count)
{
#if LED_ON == 1
  if (led_idx > 1)
  {
    return;
  }
#endif
  if (led_idx > 2 || led_idx == 0)
  {
    return;
  }

  uint8_t _pin = (led_idx == 1) ? LED1_PIN : LED2_PIN;

  if (count > 0)
  {
    count--;
    if (count >= 128)
    {
      if (count & 8)
      {
        digitalWrite(_pin, HIGH);
      }
      else
      {
        digitalWrite(_pin, LOW);
      }
      if (count == 128)
        count = 0;
    }
    else if (count >= 64)
    {
      if (count & 4)
      {
        digitalWrite(_pin, HIGH);
      }
      else
      {
        digitalWrite(_pin, LOW);
      }
      if (count == 64)
        count = 0;
    }
    else
    {
      if (count & 2)
      {
        digitalWrite(_pin, HIGH);
      }
      else
      {
        digitalWrite(_pin, LOW);
      }
    }
  }
}
#endif
